{"version":3,"sources":["components/PokemonDetails.js","components/PokemonsByType.js","components/CollectionItem.js","components/PokemonCollection.js","photos/team-rocket.png","photos/open-pokeball.png","photos/close-pokeball.png","photos/pikachu-sad.png","photos/search-pikachu.png","components/SearchArea.js","App.js","reportWebVitals.js","index.js"],"names":["pokemonDetails","pokemon","srcImg","setSrcImg","getPokemonsType","btnText","addToCollection","hidden","flipPokemon","data","sprites","back_default","front_default","className","name","height","weight","types","map","type","i","onClick","src","onMouseOver","onMouseLeave","PokemonsByType","pokemonListByType","getPokemonDetails","CollectionItem","pokemonName","useState","bool","setBool","pokemonTypes","forEach","id","PokemonCollection","collection","getCollection","hideCollection","temp","undefined","itemCollection","URL","allPokemonsOfType","SearchArea","inputValue","setInputValue","setPokemon","notFoundMessage","setNotFoundMessage","pokemonTypeList","setPokemonTypeList","setHidden","openPokeBall","setBtnText","setHideCollection","indexState","setIndexState","hiddenNextBtn","setHiddenNextBtn","classNameSpinner","setClassNameSpinner","blurWhenLoading","setBlurWhenLoading","e","a","target","innerText","axios","get","pokemonState","caught","allCollection","findIndex","poke","closePokeBall","pikachuSad","getTypeList","typeName","tempTypes","pokemons","then","result","tempData","console","log","nextPage","limitPokemonType","length","push","setCollection","post","delete","autoPlay","onPlay","loop","style","width","position","top","backgroundColor","boxShadow","placeholder","onChange","value","toLowerCase","searchPikachu","teamRocket","alt","res","catch","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2938ed10.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function pokemonDetails({\r\n  pokemon,\r\n  srcImg,\r\n  setSrcImg,\r\n  getPokemonsType,\r\n  btnText,\r\n  addToCollection,\r\n  hidden,\r\n}) {\r\n  //Function to flip the Pokemon img on mouse hover\r\n\r\n  const flipPokemon = () => {\r\n    if (srcImg === pokemon.data.sprites.back_default) {\r\n      setSrcImg(pokemon.data.sprites.front_default);\r\n    } else {\r\n      setSrcImg(pokemon.data.sprites.back_default);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"div-pokemon-details\">\r\n      <ul className=\"ul-pokemon-details\">\r\n        <li className=\"li-pokemon-details\">Name: {pokemon.data.name}</li>\r\n        <li className=\"li-pokemon-details\">Height: {pokemon.data.height}</li>\r\n        <li className=\"li-pokemon-details\">Weight: {pokemon.data.weight}</li>\r\n        <li className=\"li-pokemon-details\">\r\n          Types:{\" \"}\r\n          {pokemon.data.types\r\n            ? pokemon.data.types.map((type, i) => (\r\n                <span\r\n                  key={`type-${i}`}\r\n                  className=\"type\"\r\n                  onClick={getPokemonsType}\r\n                >\r\n                  {type}{\" \"}\r\n                </span>\r\n              ))\r\n            : \"\"}\r\n        </li>\r\n      </ul>\r\n      <img\r\n        className=\"pokemon-img\"\r\n        src={srcImg}\r\n        onMouseOver={flipPokemon}\r\n        onMouseLeave={flipPokemon}\r\n      />\r\n      <img\r\n        className=\"catch-release-btn\"\r\n        hidden={hidden}\r\n        onClick={addToCollection}\r\n        src={btnText}\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PokemonsByType({\r\n  pokemonListByType,\r\n  getPokemonDetails,\r\n}) {\r\n  return (\r\n    <div className=\"div-pokemon-types\">\r\n      <li className=\"pokemon-list-by-type\">\r\n        <img src={pokemonListByType.src} className=\"img-list\"></img>\r\n        <span onClick={getPokemonDetails}>{pokemonListByType.name}</span>\r\n      </li>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CollectionItem({ pokemonName }) {\r\n  const [bool, setBool] = useState(true);\r\n  const showData = () => {\r\n    if (bool) {\r\n      setBool(false);\r\n    } else {\r\n      setBool(true);\r\n    }\r\n  };\r\n  let pokemonTypes = \"\";\r\n  pokemonName.types.forEach((type) => {\r\n    pokemonTypes = `${pokemonTypes}  ${type}`;\r\n  });\r\n  return (\r\n    <div className=\"pokemon-collection-item\" onClick={showData}>\r\n      {pokemonName.name}\r\n      <span className=\"pokemon-data\" hidden={bool}>\r\n        - Id: {pokemonName.id}, Height: {pokemonName.height}, Weight:{\" \"}\r\n        {pokemonName.weight}, Types: {pokemonTypes}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CollectionItem from \"./CollectionItem\";\r\n\r\nexport default function PokemonCollection({\r\n  collection,\r\n  getCollection,\r\n  hideCollection,\r\n}) {\r\n  const temp =\r\n    collection.data === undefined\r\n      ? []\r\n      : collection.data === \"Empty collection\"\r\n      ? []\r\n      : collection.data;\r\n  return (\r\n    <>\r\n      <h3>My Pokemons Collection</h3>\r\n      <div hidden={hideCollection} className=\"all-collection\">\r\n        {temp.map((itemCollection, i) => (\r\n          <CollectionItem\r\n            key={`collectionItem-${i}`}\r\n            pokemonName={itemCollection}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button className=\"get-collection-btn\" onClick={getCollection}>\r\n        Get collection\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/team-rocket.51fc514c.png\";","export default __webpack_public_path__ + \"static/media/open-pokeball.66fb7357.png\";","export default __webpack_public_path__ + \"static/media/close-pokeball.1662d2a4.png\";","export default __webpack_public_path__ + \"static/media/pikachu-sad.afd8711e.png\";","export default __webpack_public_path__ + \"static/media/search-pikachu.9af2a123.png\";","import AudioPlayer from \"react-h5-audio-player\";\r\nimport \"react-h5-audio-player/lib/styles.css\";\r\nimport \"../styles/searchArea.css\";\r\nimport { React, useState } from \"react\";\r\nimport PokemonDetails from \"./PokemonDetails\";\r\nimport axios from \"axios\";\r\nimport PokemonsByType from \"./PokemonsByType\";\r\nimport PokemonCollection from \"./PokemonCollection\";\r\nimport teamRocket from \"../photos/team-rocket.png\";\r\nimport openPokeBall from \"../photos/open-pokeball.png\";\r\nimport closePokeBall from \"../photos/close-pokeball.png\";\r\nimport pikachuSad from \"../photos/pikachu-sad.png\";\r\nimport searchPikachu from \"../photos/search-pikachu.png\";\r\nconst URL = \"http://localhost:3001/api\";\r\nconst songPath =\r\n  \"https://vgmsite.com/soundtracks/pokemon-ten-years-of-pokemon/zmouwohk/1-Pokemon%20Theme%20%28Season%20Theme%29.mp3\";\r\nlet allPokemonsOfType = {};\r\n\r\nexport default function SearchArea() {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [pokemon, setPokemon] = useState({ data: \"\" });\r\n  const [notFoundMessage, setNotFoundMessage] = useState(\"\");\r\n  const [srcImg, setSrcImg] = useState(\"\");\r\n  const [pokemonTypeList, setPokemonTypeList] = useState(\"\");\r\n  const [hidden, setHidden] = useState(true);\r\n  const [btnText, setBtnText] = useState(openPokeBall);\r\n  const [hideCollection, setHideCollection] = useState(true);\r\n  const [indexState, setIndexState] = useState(0);\r\n  const [hiddenNextBtn, setHiddenNextBtn] = useState(true);\r\n  const [classNameSpinner, setClassNameSpinner] = useState(\"spinner-div\");\r\n  const [blurWhenLoading, setBlurWhenLoading] = useState(\"main\");\r\n\r\n  //Function to get pokemon details\r\n  const getPokemonDetails = async (e) => {\r\n    const pokemonName = inputValue ? inputValue : e.target.innerText;\r\n    setHideCollection(true);\r\n    try {\r\n      setClassNameSpinner(\"loader\");\r\n      setBlurWhenLoading(\"blur\");\r\n      const pokemonState = await axios.get(`${URL}/pokemon/${pokemonName}`);\r\n      pokemonState.data.caught = false;\r\n      setBtnText(openPokeBall);\r\n      const allCollection = await axios.get(`${URL}/collection`);\r\n      if (allCollection.data !== \"Empty collection\") {\r\n        const index = allCollection.data.findIndex(\r\n          (poke) => poke.name === inputValue\r\n        );\r\n        if (index !== -1) {\r\n          pokemonState.data.caught = true;\r\n          setBtnText(closePokeBall);\r\n        }\r\n      }\r\n      setPokemon(pokemonState);\r\n      setNotFoundMessage(\"\");\r\n      setSrcImg(pokemonState.data.sprites.front_default);\r\n      setHidden(false);\r\n      setPokemonTypeList(\"\");\r\n      setInputValue(\"\");\r\n      setIndexState(0);\r\n      setHiddenNextBtn(true);\r\n      setClassNameSpinner(\"spinner-div\");\r\n      setBlurWhenLoading(\"main\");\r\n    } catch (e) {\r\n      setClassNameSpinner(\"spinner-div\");\r\n      setBlurWhenLoading(\"main\");\r\n      setPokemon({ data: \"\" });\r\n      setSrcImg(\"\");\r\n      setHidden(true);\r\n      setNotFoundMessage(pikachuSad);\r\n      setIndexState(0);\r\n      setHiddenNextBtn(true);\r\n    }\r\n  };\r\n\r\n  //Update state of input value\r\n  const handleInput = (e) => {\r\n    setInputValue(e.target.value.toLowerCase());\r\n  };\r\n\r\n  //API request to get list containing the names of all the pokémons of this type\r\n  const getTypeList = async (e) => {\r\n    const typeName = e.target.innerText;\r\n    try {\r\n      setClassNameSpinner(\"loader\");\r\n      setBlurWhenLoading(\"blur\");\r\n      const tempTypes = await axios.get(`${URL}/type/${typeName}`);\r\n\r\n      // API get request for image source to type list\r\n      tempTypes.data.pokemons.forEach((pokemonName) => {\r\n        axios.get(`${URL}/pokemon/${pokemonName.name}`).then((result) => {\r\n          const tempData = result;\r\n          pokemonName.src = tempData.data.sprites.front_default;\r\n        });\r\n      });\r\n\r\n      setClassNameSpinner(\"spinner-div\");\r\n      setBlurWhenLoading(\"main\");\r\n\r\n      return tempTypes.data;\r\n    } catch (e) {\r\n      setClassNameSpinner(\"spinner-div\");\r\n      setBlurWhenLoading(\"main\");\r\n\r\n      setPokemonTypeList(\"Server ERROR\");\r\n      console.log(\"catch getPokemonsType\");\r\n    }\r\n  };\r\n\r\n  // Get initial pokemons by types, when click on type name\r\n  const getPokemonsType = async (e) => {\r\n    allPokemonsOfType = await getTypeList(e);\r\n    setHiddenNextBtn(false);\r\n    setIndexState(0);\r\n    nextPage();\r\n  };\r\n\r\n  // Limit the render to 20 pokemons of specific type on the DOM\r\n  const nextPage = () => {\r\n    const limitPokemonType = { pokemons: [] };\r\n    if (indexState >= allPokemonsOfType.pokemons.length) return;\r\n    setIndexState(indexState + 20);\r\n    for (let i = indexState; i < indexState + 20; i++) {\r\n      limitPokemonType.pokemons.push(allPokemonsOfType.pokemons[i]);\r\n      if (i === allPokemonsOfType.pokemons.length - 1) {\r\n        setPokemonTypeList(limitPokemonType);\r\n        setIndexState(0);\r\n        break;\r\n      }\r\n    }\r\n    setPokemonTypeList(limitPokemonType);\r\n  };\r\n\r\n  //API post request to add pokemon to collection\r\n  const [collection, setCollection] = useState(\"Empty collection\");\r\n  const addToCollection = async () => {\r\n    if (btnText === openPokeBall) {\r\n      try {\r\n        setClassNameSpinner(\"loader\");\r\n        setBlurWhenLoading(\"blur\");\r\n\r\n        await axios.post(`${URL}/collection/catch`, pokemon);\r\n        pokemon.data.caught = true;\r\n        setBtnText(closePokeBall);\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n      } catch (e) {\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n\r\n        console.log(\"catch addToCollection\");\r\n      }\r\n    } else {\r\n      try {\r\n        setClassNameSpinner(\"loader\");\r\n        setBlurWhenLoading(\"blur\");\r\n\r\n        await axios.delete(`${URL}/collection/release/${pokemon.data.id}`);\r\n        pokemon.data.caught = false;\r\n        setBtnText(openPokeBall);\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n      } catch (e) {\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n\r\n        console.log(\"catch delete addToCollection\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //Function to get all collection and present it on DOM\r\n  const getCollection = () => {\r\n    setClassNameSpinner(\"loader\");\r\n    setBlurWhenLoading(\"blur\");\r\n\r\n    axios\r\n      .get(`${URL}/collection`)\r\n      .then((res) => {\r\n        setCollection(res);\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n      })\r\n      .catch((e) => {\r\n        setClassNameSpinner(\"spinner-div\");\r\n        setBlurWhenLoading(\"main\");\r\n\r\n        console.log(\"catch getCollection\");\r\n      });\r\n    setHideCollection(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-area\">\r\n      <AudioPlayer\r\n        autoPlay={true}\r\n        src={songPath}\r\n        onPlay={(e) => console.log(\"onPlay\")}\r\n        loop={true}\r\n        style={{\r\n          width: \"300px\",\r\n          position: \"sticky\",\r\n          top: 0,\r\n          backgroundColor: \"rgb(132, 196, 238)\",\r\n          boxShadow: \"none\",\r\n        }}\r\n      />\r\n      <input\r\n        className=\"search-input\"\r\n        placeholder=\"Search Pokémon\"\r\n        onChange={handleInput}\r\n      ></input>\r\n      <img\r\n        className=\"search-button\"\r\n        src={searchPikachu}\r\n        onClick={getPokemonDetails}\r\n      ></img>\r\n      <button className=\"next-btn\" hidden={hiddenNextBtn} onClick={nextPage}>\r\n        Next\r\n      </button>\r\n      <div className={classNameSpinner}>\r\n        <img className=\"spinner-img\" src={teamRocket} alt=\"TEAM ROCKET\"></img>\r\n      </div>\r\n      <div className={blurWhenLoading}>\r\n        <PokemonDetails\r\n          setSrcImg={setSrcImg}\r\n          srcImg={srcImg}\r\n          pokemon={pokemon}\r\n          getPokemonsType={getPokemonsType}\r\n          hidden={hidden}\r\n          addToCollection={addToCollection}\r\n          btnText={btnText}\r\n          nextPage={nextPage}\r\n          hiddenNextBtn={hiddenNextBtn}\r\n        />\r\n        <img className=\"pikachu\" src={notFoundMessage}></img>\r\n        {/* Check if the pokemon type list is not empty and loop with map to render on DOM  */}\r\n        <ul className=\"ul-pokemon-types\">\r\n          {pokemonTypeList.pokemons\r\n            ? pokemonTypeList.pokemons.map((pokemon, i) => (\r\n                <PokemonsByType\r\n                  key={`pokemonListByType-${i}`}\r\n                  pokemonListByType={pokemon}\r\n                  getPokemonDetails={getPokemonDetails}\r\n                />\r\n              ))\r\n            : \"\"}\r\n        </ul>\r\n        <div className=\"collection-div\">\r\n          <PokemonCollection\r\n            collection={collection}\r\n            getCollection={getCollection}\r\n            hideCollection={hideCollection}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport SearchArea from \"./components/SearchArea\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Pokedex</h1>\r\n      <SearchArea />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}